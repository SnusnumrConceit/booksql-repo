"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]! @paginate(type: "paginator" model: "App\\User")
    user(id: ID @eq): User @find(model: "App\\User")

    books: [Book!]! @paginate(type: "paginator" model: "App\\Models\\Book")
    book(id: ID @eq): Book @find

    categoriesPaginate: [Category!]! @paginate(type: "paginator" model: "App\\Models\\Category")
    categories: [Category!]! @all
    category(id: ID @eq): Category @find

    authorsPaginate: [Author!]! @paginate(type: "paginator" model: "App\\Models\\Author")
    author(id: ID @eq): Author @find
    authors: [Author!]! @all
}

type Mutation {
    createCategory(
        name: String @rules(apply: ["required", "unique:categories,name"])
    ) : Category @create

    updateCategory(
        id: ID @rules(apply: ["required"]),
        name: String @rules(apply: ["required", "unique:categories,name"])
    ) : Category @update

    deleteCategory(
        id: ID! @rules(apply: ["required"])
    ) : Category @delete

    createBook(
        title: String @rules(apply: ["required", "unique:books,title"])
        year: Int @rules(apply: ["required"])
        description: String @rules(apply: ["required"])
    ) : Book @create

    updateBook(
        id: ID @rules(apply: ["required"]),
        title: String @rules(apply: ["required", "unique:books,title"])
    ) : Book @update

    deleteBook(
        id: ID! @rules(apply: ["required"])
    ) : Book @delete
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Book {
    id: ID!
    title: String!
    description: String!
    year: Int!
    created_at: DateTime!
    updated_at: DateTime!
    authors: [Author!]! @hasMany
    category: Category @belongsTo
}

type Author {
    id: ID!
    last_name: String!
    first_name: String!
    middle_name: String!
    description: String!
    created_at: DateTime!
    updated_at: DateTime!
    books: [Book!]! @hasMany
}

type Category {
    id: ID!
    name: String!
    books: [Book!]! @hasMany
}